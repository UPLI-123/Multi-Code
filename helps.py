# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'helps.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(1326, 718)
        self.frame = QtWidgets.QFrame(Form)
        self.frame.setGeometry(QtCore.QRect(10, 10, 1311, 701))
        self.frame.setStyleSheet("#frame{\n"
"  background-image: url(:/images/bg3.jpeg);\n"
"  background-position: center;\n"
"}")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.helpss = QtWidgets.QTextBrowser(self.frame)
        self.helpss.setEnabled(True)
        self.helpss.setGeometry(QtCore.QRect(10, 10, 1321, 681))
        self.helpss.setStyleSheet("#helpss{\n"
"    border-radius:4px;\n"
"    background-color: transparent;\n"
"}\n"
"")
        self.helpss.setObjectName("helpss")

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.helpss.setHtml(_translate("Form", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:15.96pt; font-weight:600; color:#000000;\">多模态数据多粒度融合仿真系统说明文档</span><span style=\" font-family:\'TimesNewRomanPS-BoldMT\'; font-size:15.96pt; color:#000000;\"> </span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'TimesNewRomanPS-BoldMT\'; font-size:15.96pt; color:#000000;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt; color:#000000;\">  基于提出的多模态数据粒结构的建立方法、多模态数据粒结构的优化方法 和最优粒度层和满意粒度层的选择方法，设计并实现了多模态数据多粒度融合 仿真系统，为多模态数据多粒度融合模型的验证提供了实验环境。系统的主界 面如图 </span><span style=\" font-family:\'TimesNewRomanPSMT\'; font-size:12pt; color:#000000;\">1 </span><span style=\" font-size:12pt; color:#000000;\">所示。该仿真系统主要包括三大功能模块，分别是输入模块，处理模 块和分析模块，下面对每个功能模块进行介绍。</span><span style=\" font-family:\'TimesNewRomanPSMT\'; font-size:12pt; color:#000000;\"> </span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><img src=\":/images/cs001.png\" /></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt; color:#000000;\">图 </span><span style=\" font-family:\'TimesNewRomanPSMT\'; font-size:12pt; color:#000000;\">1</span><span style=\" font-size:12pt; color:#000000;\">：多模态数据多粒度融合仿真系统主界面</span><span style=\" font-family:\'TimesNewRomanPSMT\'; font-size:12pt; color:#000000;\"> </span></p>\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'TimesNewRomanPSMT\'; font-size:12pt; color:#000000;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt; color:#000000;\">  输入模块主要包括三个功能，分别是多模态数据导入、多模态数据融合算 法导入和数据预处理。多模态数据导入将待处理的数据集进行导入，目前支 持</span><span style=\" font-family:\'TimesNewRomanPSMT\'; font-size:12pt; color:#000000;\">.csv </span><span style=\" font-size:12pt; color:#000000;\">格式的数据，在配置信息的数据集名称中会显示导入的数据集。融合算 法导入将多模态数据融合算法进行导入，目前支持数据融合、特征融合和结果 融合三种融合算法，在配置信息的融合算法中会显示导入的融合算法。数据预 处理对导入的多模态数据进行处理生成标准化格式的数据。</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt; color:#000000;\">  处理模块主要包括三个功能，分别是多模态数据粒结构的建立、多模态数 据粒结构的优化和基于粒结构的问题求解层选择。粒结构建立实现多模态数据 多视角多层次粒结构的构造，结果通过右侧结果显示中粒结构建立进行输出。 粒结构优化对多模态数据多视角多层次粒结构的视角、层次和属性进行约简， 优化后的粒结构通过右侧结果显示中粒结构优化进行输出。问题求解层选择在优化后的粒结构中选择问题求解层，目前支持最优粒度层和满意粒度层的选 择，在配置信息的问题求解层中会显示选择的问题求解层，选择的结果通过右 侧结果显示中求解层选择进行输出。</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt; color:#000000;\">  分析模块主要是针对具体的下游任务，根据选择出的问题求解层和相应的 融合算法，通过下游任务的执行效果验证多模态数据粒结构的建立、多模态数 据粒结构的优化和基于粒结构的问题求解层选择的有效性。目前下游任务主要 支持决策树、</span><span style=\" font-family:\'TimesNewRomanPSMT\'; font-size:12pt; color:#000000;\">K </span><span style=\" font-size:12pt; color:#000000;\">近邻、支持向量机等分类算法，在配置信息的下游任务中会显 示相应的分类器。性能评价指标主要是分类精度。</span></p></body></html>"))
import image_rc
